# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

version: "3"

services:
  kafka-server:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "29092:29092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    hostname: kafka
    networks:
      - app-tier

  kafka-ui:
    image: docker.io/provectuslabs/kafka-ui:latest
    ports:
      - "8000:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
    networks:
      - app-tier

  backend:
    build:
      context: backend/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - app-tier

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-tier

  postgres-db:
    image: postgres:16-alpine
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: liel-almog
    volumes:
      - postgresvol:/var/lib/postgresql/data
      - $PWD/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/ # This is where the SQL scripts are located
    networks:
      - app-tier

volumes:
  kafka_data:
    driver: local
  postgresvol:
    driver: local
networks:
  app-tier:
    driver: bridge
